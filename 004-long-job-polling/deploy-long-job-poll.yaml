AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Periodically polls for the completion of a long job until the long job completes.

Parameters:
  JobWaitTimeout:
    Type: Number
    Description: The total time (in seconds) to keep polling for the job/process completion. Default of 30 mins.
    Default: 1800
  WaitTime:
    Type: Number
    Description: The number (in seconds) to wait between each check completion check. Defaults of 5 mins.
    Default: 300

Resources:

  LongJobChecker:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./src
      Description: Checks for completion of a long running job
      Environment:
        Variables:
          JOB_WAIT_TIMEOUT: !Ref JobWaitTimeout
      Handler: index.lambda_handler
      MemorySize: 128
      Runtime: python3.8
      Timeout: 30

  LongJobCheckerOrchestrator:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: CheckLongJobState
        States:
          CheckLongJobState:
            Type: Task
            Resource: !GetAtt LongJobChecker.Arn
            ResultPath: $.job_check_status
            Next: IsJobFinished
          IsJobFinished:
            Type: Choice
            Choices:
              - Variable: $.job_check_status.wait_status
                StringEquals: "KEEP_WAITING"
                Next: WaitStep
              - Variable: $.job_check_status.wait_status
                StringEquals: "JOB_COMPLETED"
                Next: JobCompleted
              - Variable: $.job_check_status.wait_status
                StringEquals: "JOB_WAIT_TIMEOUT"
                Next: JobWaitTimedOut
          WaitStep:
            Type: Wait
            Seconds: !Ref WaitTime
            Next: CheckLongJobState
          JobCompleted:
            Type: Succeed
          JobWaitTimedOut:
            Type: Fail
      Role: !GetAtt LongJobCheckerOrchestratorRole.Arn

  LongJobCheckerOrchestratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-orchestrator-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-call-job-checker-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action:
                  - lambda:GetFunctionConfiguration 
                  - lambda:InvokeFunction
                Resource: !GetAtt LongJobChecker.Arn