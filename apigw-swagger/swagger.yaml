openapi: "3.0.0"
info:
  title: PetsApi
  version: 1.0.0
  license:
    name: MIT
x-amazon-apigateway-request-validators:
  body-only:
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  # Configure the response of API Gateway when a bad request body is found. Full list of
  # Gateway responses can be found here: https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html
  BAD_REQUEST_BODY:
    responseTemplates:
      application/json: "Error: $context.error.validationErrorString"
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      responses:
        '200':
          description: An array of pets
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          # Unfortunately, shorthand YAML notation cannot be used in the swagger file for intrinsic functions, so Fn::Sub (and not !Sub) it is
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPetsFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST  # This is the method used by API gateway to integrate with lambda
        type: aws_proxy
  /addPet:
    post:
      summary: Add a new pet record
      operationId: addPet
      # The below directive makes Api Gateway use the request validator called "body-only" which is
      # defined in the header of the swagger file. This validator will validate the request payload
      # with the schema defined in the components section below
      x-amazon-apigateway-request-validator: body-only
      tags:
        - pet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPet'  
      responses:
        '200':
          description: Add a new pet record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          Fn::Sub: arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/${AddPetFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
components:
  schemas:
    AddPet:
      type: object
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string  
    Pet:
      type: object
      required:
        - id
        - name
        - address
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"